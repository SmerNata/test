{"version":3,"file":"static/js/124.95af5e90.chunk.js","mappings":"2OAiCMA,GAAiBC,EAAAA,EAAAA,GAAU,CAC7BC,KAAM,SADaD,EAzBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAC9B,OACI,kBAAMC,SAAUF,EAAhB,WACI,0BAAK,SAACG,EAAA,EAAD,CAAOC,KAAK,OAAOC,YAAY,QAChCC,KAAK,QAAQC,UAAWC,EAAAA,EACxBC,SAAU,CAACC,EAAAA,SACf,0BAAK,SAACP,EAAA,EAAD,CAAOC,KAAK,WAAWC,YAAY,WACxCC,KAAK,WAAWC,UAAWC,EAAAA,EAC3BC,SAAU,CAACC,EAAAA,SACX,0BACI,8BACI,SAACP,EAAA,EAAD,CAAOC,KAAK,WAAWE,KAAK,WAC5BC,UAAWC,EAAAA,IAFf,uFAMHP,IAAS,gBAAKU,UAAU,qBAAf,SACLV,KAEL,0BACI,kBAAOG,KAAK,SAASQ,MAAM,kBA2B3C,GAAeC,EAAAA,EAAAA,KALO,SAACC,GACnB,MAAO,CACHC,OAAQD,EAAME,KAAKD,UAGY,CAACE,kBAAAA,EAAAA,IAAxC,EAnBc,SAACC,GAIX,OAAIA,EAAMH,QACC,SAAC,KAAD,CAAUI,GAAI,cAGrB,4BACG,mCACA,SAACtB,EAAD,CAAgBK,SATN,SAACkB,GACdF,EAAMD,kBAAkBG,EAASC,MAAOD,EAASE,SAAUF,EAASG,oB,gLCpCtEC,EAAc,SAAC,GAA2B,EAA1BC,MAA2B,IAApBC,EAAmB,EAAnBA,KAAQR,GAAW,YACxCS,EAAWD,EAAKE,SAAWF,EAAKzB,MACtC,OACI,iBAAKU,UAAW,iBAAiBgB,GAAY,UAA7C,UACKT,EAAMW,SACNF,IAAY,gBAAKhB,UAAU,UAAf,SAA0Be,EAAKzB,YAIzC6B,EAAW,SAACZ,GACvB,IAAOO,EAA4BP,EAA5BO,MAAeM,GAAab,EAArBQ,MAAd,OAAmCR,EAAnC,IACA,OACE,SAACM,GAAD,kBAAiBN,GAAjB,cACE,uCAAcO,GAAWM,QAIlBvB,EAAQ,SAACU,GACpB,IAAOO,EAA4BP,EAA5BO,MAAeM,GAAab,EAArBQ,MAAd,OAAmCR,EAAnC,IACA,OACI,SAACM,GAAD,kBAAiBN,GAAjB,cACE,oCAAWO,GAAWM,S,sGCvBvB,IAAMrB,EAAW,SAACE,GACrB,OAAIA,OACA,EAEO,qBAGFoB,EAAmB,SAACC,GAAD,OAAe,SAACrB,GAC5C,OAAIA,GAASA,EAAMsB,OAASD,EACjB,iBAAiBA,EAAU,gBAElC,IAGKE,EAAa,SAACvB,GACvB,OAAIA,GAASA,EAAMsB,OAAS,EACjB,+BAEP","sources":["component/Login/Login.jsx","component/common/FormsControls/FormsControls.jsx","tools/validators/validator.js"],"sourcesContent":["import React from 'react';\r\nimport { Field,reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport {required} from '../../tools/validators/validator';\r\nimport './Login.css';\r\nimport { loginThunkCreator} from '../../redux/auth-reducer';\r\nimport { Navigate } from 'react-router-dom';\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><Field type=\"text\" placeholder='Email' \r\n                name=\"email\" component={Input}\r\n                validate={[required]} /></div>\r\n            <div><Field type=\"password\" placeholder='Password' \r\n            name=\"password\" component={Input} \r\n            validate={[required]}/></div>\r\n            <div>\r\n                <label>\r\n                    <Field type=\"checkbox\" name=\"remember\"\r\n                    component={Input} />\r\n                    Запомнить меня\r\n                </label>\r\n            </div>\r\n            {error && <div className='form-summary-error'>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <input type=\"submit\" value=\"Login\" />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.loginThunkCreator(formData.email, formData.password, formData.remember);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Navigate to={\"/profile\"} />\r\n    }\r\n    return (\r\n        <div>\r\n           <h1>Login</h1>\r\n           <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{loginThunkCreator})(Login);","import React from 'react';\r\nimport './FormsControls.css';\r\nconst FormControl = ({input, meta,...props}) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n      <div className={'form-control '+(hasError && '_error')}>\r\n          {props.children}\r\n          {hasError && <div className='message'>{meta.error}</div>}\r\n      </div>\r\n  )\r\n}\r\nexport const Textarea = (props) => {\r\n  const {input, meta,...restProps} = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n  )\r\n}\r\nexport const Input = (props) => {\r\n  const {input, meta,...restProps} = props;\r\n  return (\r\n      <FormControl {...props}>\r\n        <input {...input} {...restProps}/>\r\n      </FormControl>\r\n  )\r\n}","export const required = (value) => {\r\n    if (value) {\r\n        return undefined;\r\n    } else {\r\n        return 'Field is required';\r\n    }\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) {\r\n        return 'Max length is '+maxLength+' symbols';\r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\nexport const minLength3 = (value) => {\r\n    if (value && value.length < 3) {\r\n        return 'Min length is 3 symbols';\r\n    } else {\r\n        return undefined;\r\n    }\r\n}"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","type","placeholder","name","component","Input","validate","required","className","value","connect","state","isAuth","auth","loginThunkCreator","props","to","formData","email","password","remember","FormControl","input","meta","hasError","touched","children","Textarea","restProps","maxLengthCreator","maxLength","length","minLength3"],"sourceRoot":""}