{"version":3,"file":"static/js/383.f1123c39.chunk.js","mappings":"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","sources":["component/Dialogs/List/ListItem/ListItem.jsx","component/Dialogs/List/List.jsx","component/Dialogs/MessageList/MessageItem/MessageItem.jsx","component/Dialogs/MessageList/MessageList.jsx","component/Dialogs/Dialogs.jsx","component/Dialogs/DialogsContainer.jsx","component/common/FormsControls/FormsControls.jsx","hoc/AuthRedirect.jsx","tools/validators/validator.js"],"sourcesContent":["import React from 'react';\r\nimport './ListItem.css';\r\nimport {NavLink} from 'react-router-dom';\r\nconst ListItem = (props) => {\r\n  let link = \"/dialogs/\"+props.id;\r\n  return (\r\n    <li className='list__item'>\r\n      <NavLink to={link}>{props.name}</NavLink>\r\n    </li>\r\n  )\r\n}\r\nexport default ListItem;","import React from 'react';\r\nimport './List.css';\r\nimport ListItem from './ListItem/ListItem';\r\nconst List = (props) => {\r\n  let arList = props.dialogs.map(item => (\r\n    <ListItem name={item.name} key={item.id} id={item.id} />\r\n  ));\r\n  return (\r\n    <ul className='list'>\r\n      { arList }\r\n    </ul>\r\n  )\r\n}\r\nexport default List;","import React from 'react';\r\nimport './MessageItem.css';\r\nconst MessageItem = (props) => {\r\n  return (\r\n    <div className='message-item'>\r\n      <div className='message-item__user'>\r\n        <img className='message-item__img' src=\"\" alt=\"\" />\r\n        <div className='message-item__name'>{props.name}</div>\r\n      </div>\r\n      <div className='message-item__message'>\r\n        {props.text}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default MessageItem;","import React from 'react';\r\nimport './MessageList.css';\r\nimport MessageItem from './MessageItem/MessageItem';\r\nconst MessageList = (props) => {\r\n  let arMessage = props.messages.map(item => (\r\n    <MessageItem name={item.name} key={item.id} text={item.text} />\r\n  ))\r\n  return (\r\n    <div className='message-list'>\r\n      { arMessage }\r\n    </div>\r\n  )\r\n}\r\nexport default MessageList;","import React from 'react';\r\nimport './Dialogs.css';\r\nimport List from './List/List';\r\nimport { Field,reduxForm } from 'redux-form';\r\nimport MessageList from './MessageList/MessageList';\r\nimport {required,maxLengthCreator} from '../../tools/validators/validator';\r\nimport {Textarea} from '../common/FormsControls/FormsControls';\r\nconst maxLength30 = maxLengthCreator(100);\r\nconst MessageForm = (props) => {\r\n  return (\r\n    <form className='message-form' onSubmit={props.handleSubmit}>\r\n      <Field className='message-form__textarea' \r\n            component={Textarea} \r\n            name=\"message\"\r\n            validate={[required, maxLength30]}\r\n            placeholder='your message...' />\r\n      <button className='message-form__button' type=\"submit\">Add message</button>\r\n    </form>\r\n  )\r\n}\r\nconst MessageReduxForm = reduxForm({\r\n  form: 'message'\r\n})(MessageForm);\r\nconst Dialogs = (props) => {\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.message);\r\n  }\r\n  return (\r\n    <div className='dialogs'>\r\n      <h1 className='main__title'>Dialogs</h1>\r\n      <div className='dialogs__position'>\r\n        <div className='dialogs__side'>\r\n          <List dialogs={props.dialogs} />\r\n        </div>\r\n        <div className='dialogs__main'>\r\n          <MessageList messages={props.messages} />\r\n          <MessageReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {sendMessageActionCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages: state.dialogsPage.messages,\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (text) => {\r\n      dispatch(sendMessageActionCreator(text));\r\n    },\r\n  }\r\n}\r\nexport default compose(\r\n  connect(mapStateToProps,mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport './FormsControls.css';\r\nconst FormControl = ({input, meta,...props}) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n      <div className={'form-control '+(hasError && '_error')}>\r\n          {props.children}\r\n          {hasError && <div className='message'>{meta.error}</div>}\r\n      </div>\r\n  )\r\n}\r\nexport const Textarea = (props) => {\r\n  const {input, meta,...restProps} = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n  )\r\n}\r\nexport const Input = (props) => {\r\n  const {input, meta,...restProps} = props;\r\n  return (\r\n      <FormControl {...props}>\r\n        <input {...input} {...restProps}/>\r\n      </FormControl>\r\n  )\r\n}","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={\"/login\"} />\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n}","export const required = (value) => {\r\n    if (value) {\r\n        return undefined;\r\n    } else {\r\n        return 'Field is required';\r\n    }\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) {\r\n        return 'Max length is '+maxLength+' symbols';\r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\nexport const minLength3 = (value) => {\r\n    if (value && value.length < 3) {\r\n        return 'Min length is 3 symbols';\r\n    } else {\r\n        return undefined;\r\n    }\r\n}"],"names":["props","link","id","className","to","name","arList","dialogs","map","item","src","alt","text","arMessage","messages","maxLength30","maxLengthCreator","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","type","values","sendMessage","message","compose","connect","state","dialogsPage","dispatch","sendMessageActionCreator","withAuthRedirect","Dialogs","FormControl","input","meta","hasError","touched","error","children","restProps","Input","mapStateToPropsRedirect","isAuth","auth","Component","RedirectComponent","this","React","value","maxLength","length","minLength3"],"sourceRoot":""}